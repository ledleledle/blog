[{"content":"Hari ini saya akan bahas tentang AWS Server namun ini lebih ke pembuatan akunnya. Jadi AWS memang menyediakan layanan gratis untuk edukasi yang bernama AWS Educate. Disana, kita bisa mendapatkan akun AWS dengan credit senilai $100 dengan durasi 1 tahun. Nah ini cocok sekali untuk kalian yang ingin belajar DevOps/Infra (yang penting jangan buat minning ðŸ˜‚). Tentu saja blog ini akan terus membahas tentang cloud services, jadi akun AWS ini akan sangat membantu kalian dalam proses belajar.\nBuat akun AWS Educate dulu. Pergi ke halaman AWS Educate, lalu klik menu Join AWS Educate.   AWS Educate Homepage \nPilih role sebagai Murid/Student (Tergantung kebutuhan sih\u0026hellip; Kalau disini saya memang sebagai murid). Lalu tolong isi form yang diberikan dengan benar. Karena email akan digunakan untuk konfirmasi nantinya. Kalau sekolah kalian tidak ada didalam list, cantumkan saja Kementerian Pendidikan dan Kebudayaan atau Kementerian Komunikasi dan Informatika.   Role \nPastikan juga kalian memilih bulan dan tahun kelulusan (Graduation Month \u0026amp; Graduation Year) setahun dari sekarang, misal sekarang Desember 2020 pilih tanggal kelulusannya Desember 2021. Kira-kira tampilan akhirnya seperti ini.   Form Pendaftaran AWS Educate \nDah selanjutnya tinggal klik I Agree saja. Setelah pendaftaran selesai, maka kita akan mendapatkan email verifikasi dari AWS.   Email Verifikasi \nSetelah email sudah dikonfirmasi, saatnya menunggu email balasan dari AWS. Jika diterima seperti ini balasannya.   Approved!!! \nSekarang coba login ke AWS Educate. Lalu pergi ke tab AWS Account. Klik AWS Educate Starter Account.   AWS Educate Starter Account \nNanti kita akan dialihkan ke website pihak ke-3. Disana kelihatan credits kalian tinggal berapa.   Vocareum \nNice kita sudah masuk pada page EC2 Management. Namun untuk praktek penggunaan EC2 ini tidak akan saya bahas sekarang.   EC2 \nYeah\u0026hellip; Met belajar cuyy!!!\nNantikan artikel berikutnya tentang penggunaan AWS Cloud. Sampai jumpa\u0026hellip;!!!\n","date":"2020-12-20T19:34:30+07:00","permalink":"https://blog.leonprasetya.my.id/p/cara-membuat-akun-aws-educate-100-gratis/","title":"Cara membuat akun AWS Educate $100 Gratis"},{"content":"Sebelumnya saya telah membuat tutorial How I Made Hugo Blog. Ini lanjutan yang telah saya janjikan. Dan maaf saya sekarang pakai Bahasa Indonesia, karena ternyata setelah saya membuat postingan tersebut ternyata Bahasa Inggris saya masih kacau dan terlihat di postingan sebelumnya bahasanya kacau sekali (jadi malu). Yah tidak usah basa-basi lagi.\nTutorial 1. Generate Static Files Jika sebelumnya kita hanya menjalankan server local dengan perintah hugo serve. Sekarang kita akan meng-generate file statis dengan perintah hugo -D. Perintah tersebut akan menjadikan tulisan dan tema yang kalian buat menjadi file statis yang bisa kalian temui di folder public.\n2. Buat Repo Github Kita pakai cara mudah saja. Yaitu, pada browser kita buat repo di Github. Nama repo terserah kalian, buat tanpa README.\nSetelah repo dibuat, disana terdapat tutorialnya tentang cara membuat repository di command line kalian.\nLangsung buka terminal, masuk ke folder blog kalian dan langsung menuju folder public\ncd blog/public Lalu inisiasi repo github yang telah dibuat tadi.\ngit init git commit -m \u0026#34;first commit blog\u0026#34; git remote add origin https://github.com/username/nama_repo.git git push -u origin master # ganti username dan nama_repo dengan milik kalian masing-masing Setelah proses push berhasil, kembali buka browser kalian, lalu menuju Setting repository kalian. Scroll kebawah sampai menemukan tulisan Github Pages. Klik pada menu dropdown None. Lalu kill branch yang kalian inginkan, dalam case ini, tadi kita pakai master branch. Jadi klik itu saja (seperti gambar dibawah).   Github Page \nDan website kalian sudah mengudara di internet.\n","date":"2020-04-29T00:16:59+07:00","image":"https://blog.leonprasetya.my.id/p/host-website-hugo-di-github/hugo_huf7630602c9bedf706ad0ded87d4ffc01_56751_120x120_fill_box_smart1_2.png","permalink":"https://blog.leonprasetya.my.id/p/host-website-hugo-di-github/","title":"Host Website Hugo di Github"},{"content":"Intro Hey guys, iâ€™ll teach you how to made blog with hugo. First iâ€™ll explain a bit about hugo, Hugo is a fast and modern static site generator written in Go language, so basically you donâ€™t need some back-end code. You just install it, made a content, then generate your html code. Simple enought right. So letâ€™s jump to tutorial.\nSpecification and requirements First, i use Arch Linux Distros, the installation maybe a bit differ, but others absolutelly same. Make sure your repository always up to date.\nsudo pacman -Syu hugo If you use other distros, you can check a link here Hugo Installation Guide\nTutorial Okay.. i assume youâ€™re already install Hugo, once Hugo installed, you can create a Hugo sites by running.\nhugo new site blog #replace blog with the name you want Then go to your site directory.\ncd blog Soâ€¦ Next we need template. Find one at Official Hugo Website Here. There are many choices, choose the one you like. For example i choose Hugo.386. Download theme using git.\ngit submodule add https://gitlab.com/maxlefou/hugo.386 themes/hugo.386 If you facing error like this.\nfatal: not a git repository (or any of the parent directories): .git Try git init to your main folder. Then run command git submodule again.\nThen go to themes/hugo.386/exampleSite. There are examples that you can use.   ExampleSite Folder \nCopy all (except README.md). To your main directory. Like this.   Copy all on root folder \nOpen config.toml. Edit everything you need, if there is anything you donâ€™t need, just mark it with #. The following example.\nbaseurl = \u0026#34;/\u0026#34; title = \u0026#34;ledleledle\u0026#39;s Blog\u0026#34; #languageCode = \u0026#34;en\u0026#34; #DefaultContentLanguage = \u0026#34;en\u0026#34; preserveTaxonomyNames = true theme = \u0026#34;hugo.386\u0026#34; ... You can freely customize the information in config.toml files. If you done, lets test the site by running this command.\nhugo serve Open http://localhost:1313 in your browser.   Tadaaâ€¦!!! \nTo add new content in your blog, simply running this command.\nhugo new post/new_article.md Fill the content as you like, see an example of the writing on content folder that you copied before. Next. Iâ€™ll post tutorial to host it on Github Page.\nOutro Well thats itâ€¦ If youâ€™re facing a problem comments down bellow. See you in next tutorial.\n","date":"2020-04-24T00:16:59+07:00","image":"https://blog.leonprasetya.my.id/p/how-i-made-hugo/hugo_huf7630602c9bedf706ad0ded87d4ffc01_56751_120x120_fill_box_smart1_2.png","permalink":"https://blog.leonprasetya.my.id/p/how-i-made-hugo/","title":"How I Made Hugo"},{"content":"Halo teman-teman, kali ini saya akan membahas tentang bagaimana cara reflash original firmware dari OpenWRT pada router TP-Link MR3420 V.2. Kebetulan diminggu-minggu ini saya ingin menjual router saya karena menurut saya router ini sudah outdate dan dirumah juga sudah punya yang baru.\nSpesifikasi dan Kebutuhan  Router (sudah pasti) OS Linux Firmware bawaan TP-Link disini  Tutorial Step pertama, ekstrak file firmware terlebih dahulu\nunzip \u0026#34;TL-MR3420_V2_150319.zip\u0026#34; Rename file firmware dengan nama firmware.bin agar dalam pengerjaannya jadi lebih mudah dan simple.\nmv \u0026#34;mr3420v2_en_3_16_9_up_boot(150319).bin\u0026#34; firmware.bin Hapus beberapa byte dari Firmware dengan perintah dd. Bila perintah ini tidak dijalankan maka hasilnya anda akan mendapatkan pesan error Writing from /tmp/firmware.bin to firmware â€¦ [e]Failed to erase block saat proses flashing firmware.\n#command dd if=firmware.bin of=original.bin skip=257 bs=512 #log 7680+0 records in 7680+0 records out 3932160 bytes (3.9 MB, 3.8 MiB) copied, 0.0352155 s, 208 MB/s Upload Firmware ke router kalian dengan perintah scp\nscp original.bin root@4.3.2.1:/tmp  Q : Kok ipnya 4.3.2.1? A : Iya itu setting ip router saya sebelumnya.  Masuk ke sistem router melalui ssh dengan perintah\nssh root@4.3.2.1  Note : inget ya, sesuaikan dengan ip router kalian masing-masing.\n Install firmware original TP-Link #command mtd -r write /tmp/original.bin firmware #log Unlocking firmware ... Writing from /tmp/original.bin to firmware ... Rebooting ... Setelah proses selesai, router akan restart dengan sendirinya.\nBagaimana tutorialnya? mudah bukan, semoga bermanfaat untuk kalian, sekian dari saya terimakasih.\n","date":"2020-04-24T00:16:59+07:00","image":"https://blog.leonprasetya.my.id/p/reflash-original-firmware-tp-link-mr3420-v.2/index_hu4a37e72759dcf23e0c2bbe493cab5a41_29892_120x120_fill_box_smart1_2.png","permalink":"https://blog.leonprasetya.my.id/p/reflash-original-firmware-tp-link-mr3420-v.2/","title":"Reflash Original Firmware TP-Link MR3420 V.2"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;â€”\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.â€” Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements â€” abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2019-03-11T00:00:00Z","image":"https://blog.leonprasetya.my.id/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.leonprasetya.my.id/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"}]